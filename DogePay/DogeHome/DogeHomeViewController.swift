//
//  DogeHomeViewController.swift
//  DogePay
//
//  Created by Victor Lee on 2023/03/10.
//  Copyright (c) 2023 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import FlexLayout
import PinLayout

protocol DogeHomeDisplayLogic: AnyObject
{
    func displayPrice(viewModel: DogeHome.ConnectWebSocket.ViewModel)
}

class DogeHomeViewController: UIViewController, DogeHomeDisplayLogic
{
    var interactor: DogeHomeBusinessLogic?
    var router: (NSObjectProtocol & DogeHomeRoutingLogic & DogeHomeDataPassing)?

    // MARK: Object lifecycle

    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?)
    {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }

    required init?(coder aDecoder: NSCoder)
    {
        super.init(coder: aDecoder)
        setup()
    }

    // MARK: Setup

    private func setup()
    {
        let viewController = self
        let interactor = DogeHomeInteractor()
        let presenter = DogeHomePresenter()
        let router = DogeHomeRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }

    // MARK: Routing

    override func prepare(for segue: UIStoryboardSegue, sender: Any?)
    {
        if let scene = segue.identifier {
            let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
            if let router = router, router.responds(to: selector) {
                router.perform(selector, with: segue)
            }
        }
    }

    // MARK: View Components

    private let rootFlexContainer = UIView()

    private let backgrouncImageView: UIImageView = {
        let imageView = UIImageView()
        imageView.image = UIImage(named: "dogeImage")
        imageView.contentMode = .scaleAspectFill
        imageView.clipsToBounds = true
        imageView.alpha = 0.25
        return imageView
    }()

    private let coinImage: UIImageView = {
        let imageView = UIImageView()
        imageView.contentMode = .scaleAspectFill
        imageView.clipsToBounds = true
        return imageView
    }()

    private let priceLabel: UILabel = {
        let label = UILabel()
        label.font = .systemFont(ofSize: 30, weight: .bold)
        label.textColor = .label
        label.text = "Waiting for Doge..."
        return label
    }()

    private lazy var purchaseButton: UIButton = {
        let button = UIButton()
        button.setTitle("Purchase", for: .normal)
        button.backgroundColor = .systemPink
        button.titleLabel?.font = .systemFont(ofSize: 18, weight: .semibold)
        button.layer.cornerRadius = 10
        button.layer.cornerCurve = .continuous
        button.clipsToBounds = true

        button.addTarget(self, action: #selector(didTapPurchaseButton), for: .touchUpInside)
        return button
    }()

    override func viewDidLayoutSubviews() {
        super.viewDidLayoutSubviews()

        rootFlexContainer.pin.all(view.pin.safeArea)
        rootFlexContainer.flex.layout(mode: .fitContainer)
    }

    private func setupViews() {
        view.addSubview(rootFlexContainer)

        rootFlexContainer.flex.direction(.column).paddingTop(80).padding(12).define {
            $0.addItem(backgrouncImageView).aspectRatio(1)

            $0.addItem().direction(.row).alignItems(.center).grow(1).define {
                $0.addItem(coinImage).width(40).aspectRatio(1).marginRight(12)
                $0.addItem(priceLabel)
            }

            $0.addItem(purchaseButton).height(50)
        }
    }


    // MARK: View lifecycle

    override func viewDidLoad()
    {
        super.viewDidLoad()
        view.backgroundColor = .systemBackground

        setupViews()

        connect()
    }



    // MARK: Do something

    //@IBOutlet weak var nameTextField: UITextField!

    func connect()
    {
        interactor?.connect()
    }

    func displayPrice(viewModel: DogeHome.ConnectWebSocket.ViewModel)
    {
        let price = viewModel.displayedPrice.price
        if price != "" {
            DispatchQueue.main.async { [weak self] in
                self?.priceLabel.text = price
                self?.coinImage.image = viewModel.displayedPrice.coinImage
            }
        }
    }
}

// MARK: Button Actions
extension DogeHomeViewController {

    @objc
    private func didTapPurchaseButton() {

    }
}


